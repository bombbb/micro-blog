<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microblog.blog.dao.mapper.BlogLikeMapper" >
  <resultMap id="BaseResultMap" type="com.microblog.blog.dao.model.BlogLike" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="like_id" property="likeId" jdbcType="BIGINT" />
    <result column="blog_id" property="blogId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from blog_like
    where like_id = #{likeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.microblog.blog.dao.model.BlogLike" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="likeId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_like (blog_id, user_id, create_time
      )
    values (#{blogId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.microblog.blog.dao.model.BlogLike" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blog_like
    set blog_id = #{blogId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where like_id = #{likeId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select like_id, blog_id, user_id, create_time
    from blog_like
    where like_id = #{likeId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select like_id, blog_id, user_id, create_time
    from blog_like
  </select>

  <!-- 自定义　-->
  <select id="selectCountByBlogId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    select count(#{blogId})
    from blog_like
    where blog_id = #{blogId}
  </select>
  <insert id="insertMap" >


    insert into blog_like (blog_id, user_id, create_time)
    values
    <foreach collection="likeMaps" item="blogLike" index="key" separator=",">
      (#{blogLike.blogId,jdbcType=BIGINT},
      #{blogLike.userId,jdbcType=BIGINT},
       #{blogLike.createTime,jdbcType=TIMESTAMP}
      )
    </foreach>


  </insert>


  <delete id="deleteMap"  >
    delete from blog_like
    where blog_id in
    <foreach collection="unLikeMaps" item="blogUnLike" index="key" separator="," open="(" close=")">
      #{blogUnLike.blogId,jdbcType=BIGINT}
    </foreach>
    and user_id in
    <foreach collection="unLikeMaps" item="blogUnLike" index="key" separator="," open="(" close=")">
      #{blogUnLike.userId,jdbcType=BIGINT}
    </foreach>
  </delete>


  <delete id="deleteByUserId" parameterType="java.lang.Long" >
    delete from blog_like
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>


</mapper>
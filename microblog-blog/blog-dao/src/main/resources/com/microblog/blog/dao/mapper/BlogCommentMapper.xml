<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microblog.blog.dao.mapper.BlogCommentMapper" >
  <resultMap id="BaseResultMap" type="com.microblog.blog.dao.model.BlogComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="blog_id" property="blogId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from blog_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.microblog.blog.dao.model.BlogComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="commentId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_comment (blog_id, user_id, publish_time, 
      content)
    values (#{blogId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.microblog.blog.dao.model.BlogComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blog_comment
    set blog_id = #{blogId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select comment_id, blog_id, user_id, publish_time, content
    from blog_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select comment_id, blog_id, user_id, publish_time, content
    from blog_comment
  </select>

  <!--  自定义-->

  <select id="selectCountByBlogId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    select count(#{blogId})
    from blog_comment
  </select>


</mapper>
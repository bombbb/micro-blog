<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.microblog.user.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.microblog.user.dao.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_number" jdbcType="BIGINT" property="userNumber" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="actual_name" jdbcType="VARCHAR" property="actualName" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="header_url" jdbcType="VARCHAR" property="headerUrl" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_active" jdbcType="TINYINT" property="emailActive" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="login_nums" jdbcType="INTEGER" property="loginNums" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.microblog.user.dao.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (user_number, nick_name, login_password, 
      salt, actual_name, gender, 
      age, header_url, status, 
      email, email_active, phone_num, 
      register_time, last_login_time, update_time, 
      login_nums)
    values (#{userNumber,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{actualName,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{age,jdbcType=TINYINT}, #{headerUrl,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{email,jdbcType=VARCHAR}, #{emailActive,jdbcType=TINYINT}, #{phoneNum,jdbcType=VARCHAR}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{loginNums,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.microblog.user.dao.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set user_number = #{userNumber,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      actual_name = #{actualName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      header_url = #{headerUrl,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      email_active = #{emailActive,jdbcType=TINYINT},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      login_nums = #{loginNums,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender, 
    age, header_url, status, email, email_active, phone_num, register_time, last_login_time, 
    update_time, login_nums
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender, 
    age, header_url, status, email, email_active, phone_num, register_time, last_login_time, 
    update_time, login_nums
    from user
  </select>

  <!-- 用户自定义 -->
  <select id="selectIdByPhone" parameterType="java.lang.String" resultType="java.lang.Long">
    select user_id
    from user
    where phone_num = #{phone_num,jdbcType=VARCHAR}
  </select>
  <select id="selectIdByEmail" parameterType="java.lang.String" resultType="java.lang.Long">
    select user_id
    from user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    header_url
    from user
    where phone_num = #{phone_num,jdbcType=VARCHAR}
  </select>
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    header_url
    from user
     where email = #{email,jdbcType=VARCHAR}
  </select>

  <update id="updateInfoByPrimaryKey" parameterType="com.microblog.user.dao.model.User">
    update user
    <set>
      <if test="_parameter.containsKey('userNumber')">
        user_number = #{userNumber,jdbcType=BIGINT},
      </if>
      <if test="_parameter.containsKey('nickName')">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('loginPassword')">
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('salt')">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('actualName')">
        actual_name = #{actualName,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('gender')">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('age')">
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="_parameter.containsKey('headerUrl')">
        header_url = #{headerUrl,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('status')">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="_parameter.containsKey('email')">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('emailActive')">
        email_active = #{emailActive,jdbcType=TINYINT},
      </if>
      <if test="_parameter.containsKey('phoneNum')">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="_parameter.containsKey('registerTime')">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="_parameter.containsKey('lastLoginTime')">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="_parameter.containsKey('loginNums')">
        login_nums = #{loginNums,jdbcType=INTEGER},
      </if>
      user_id = #{userId,jdbcType=BIGINT},
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


  <select id="selectUserInfo" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select user_id, nick_name, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    header_url
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selectUsersInfo" parameterType="java.util.List" resultMap="BaseResultMap">
    select user_id, user_number, nick_name, login_password, salt, actual_name, gender,
    age, status, email, email_active, phone_num, register_time, last_login_time, login_nums,
    header_url
    from user
    where user_id in
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
</mapper>